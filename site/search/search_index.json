{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the fun world of 2D Arrays For furthur documentation from Java: Class Arrays . Visualizing a 2D array Let's start by visualizing the data in a 2d Array As you can see, it is pretty straightforward. Just make that you notice that the array starts at [0,0] . Now we can continue on to defining and intitalizing 2d arrays.","title":"Introduction"},{"location":"#welcome-to-the-fun-world-of-2d-arrays","text":"For furthur documentation from Java: Class Arrays .","title":"Welcome to the fun world of 2D Arrays"},{"location":"#visualizing-a-2d-array","text":"Let's start by visualizing the data in a 2d Array As you can see, it is pretty straightforward. Just make that you notice that the array starts at [0,0] . Now we can continue on to defining and intitalizing 2d arrays.","title":"Visualizing a 2D array"},{"location":"CodeNLoops/","text":"Examples and Implementation Basic Getting and Setting int[][] exampleArr = { {1,2,3}, {4,5,6}, {7,8,9} }; System.out.println(exampleArr[0][1]); //Prints \"2\" exampleArr[0][1] = 1; //Changes the value at row 1 and column 0 System.out.println(exampleArr[0][1]); //Prints \"1\" Loops Setting the array int[][] exampleArr = new int[3][5]; for(int j = 0;j < exampleArr.length;j++) { for(int i = 0;i < exampleArr[j].length;i++) { exampleArr[j][i] = j + 1 * i + 1; //Finds the product of the row and column, offset by one } } Printing the array //Method that prints out the 2D array void print2DArray(int[][] arr) { for(int j = 0;j < arr.length;j++) { for(int i = 0;i < arr[j].length;i++) { System.out.print(\"[\" + arr[j][i] + \"]\"); } System.out.println(); //Just create a new line for the next column } } Basic example //Finds and prints out the amount of evens in a 2D array int count = 0; int[][] exampleArr = { {1,2,3}, {4,5,6}, {7,8,9} }; for(int j = 0;j < exampleArr.length;j++) { for(int i = 0;i < exampleArr[j].length;i++) { if(exampleArr[j][i]%2 == 0) { count++; } } } System.out.println(count); //In this example, the count will be four","title":"Examples and Implementation"},{"location":"CodeNLoops/#examples-and-implementation","text":"","title":"Examples and Implementation"},{"location":"CodeNLoops/#basic-getting-and-setting","text":"int[][] exampleArr = { {1,2,3}, {4,5,6}, {7,8,9} }; System.out.println(exampleArr[0][1]); //Prints \"2\" exampleArr[0][1] = 1; //Changes the value at row 1 and column 0 System.out.println(exampleArr[0][1]); //Prints \"1\"","title":"Basic Getting and Setting"},{"location":"CodeNLoops/#loops","text":"Setting the array int[][] exampleArr = new int[3][5]; for(int j = 0;j < exampleArr.length;j++) { for(int i = 0;i < exampleArr[j].length;i++) { exampleArr[j][i] = j + 1 * i + 1; //Finds the product of the row and column, offset by one } } Printing the array //Method that prints out the 2D array void print2DArray(int[][] arr) { for(int j = 0;j < arr.length;j++) { for(int i = 0;i < arr[j].length;i++) { System.out.print(\"[\" + arr[j][i] + \"]\"); } System.out.println(); //Just create a new line for the next column } }","title":"Loops"},{"location":"CodeNLoops/#basic-example","text":"//Finds and prints out the amount of evens in a 2D array int count = 0; int[][] exampleArr = { {1,2,3}, {4,5,6}, {7,8,9} }; for(int j = 0;j < exampleArr.length;j++) { for(int i = 0;i < exampleArr[j].length;i++) { if(exampleArr[j][i]%2 == 0) { count++; } } } System.out.println(count); //In this example, the count will be four","title":"Basic example"},{"location":"DecNInit/","text":"Declaring and Initalizing Declaring Let's declare a 2D array with 3 rows and 5 columns int[][] exampleArr; This 2D array is only declared, and doesn't have any data. Let's put some in it! Initializing // Use this type of initialization when yo plan on filling it later procedually (like in a loop) int[][] exampleArr = new int[5][3]; //Sets all data to an int of zero // Use this if you want data to give to your program that you don't need to calculate int[][] exampleArr = { {1,2,3}, {3,6,9}, {9,18,27} }; In Java, there are two ways to create arrays. Just note that it usually is easier to use the first way for objects you created. Now let's acutally use these arrays!","title":"Declaring and Initalizing"},{"location":"DecNInit/#declaring-and-initalizing","text":"","title":"Declaring and Initalizing"},{"location":"DecNInit/#declaring","text":"Let's declare a 2D array with 3 rows and 5 columns int[][] exampleArr; This 2D array is only declared, and doesn't have any data. Let's put some in it!","title":"Declaring"},{"location":"DecNInit/#initializing","text":"// Use this type of initialization when yo plan on filling it later procedually (like in a loop) int[][] exampleArr = new int[5][3]; //Sets all data to an int of zero // Use this if you want data to give to your program that you don't need to calculate int[][] exampleArr = { {1,2,3}, {3,6,9}, {9,18,27} }; In Java, there are two ways to create arrays. Just note that it usually is easier to use the first way for objects you created. Now let's acutally use these arrays!","title":"Initializing"}]}